

body {
    font-family: Arial, Helvetica, sans-serif;
    text-align: center;
    /* Crear Variables en CSS */
    --rojo: red;
}

#layout {
    display: flex; 
    /*display: flex;*/ /* flota y organiza mas sencillamente que float */
    /* Solo actua dentro de la caja */
    /* El contenedor trendra el tamanio maximo */
    /*display: inline-flex;*/ /* el contenedor se adapta al tamanio del contenido */
    flex-direction: row;
    /* Ordena en filas y columnas, puede cambiar el orden invertido  */
    flex-wrap: wrap;
    /* Evita que los elementos se salgan del contenedor */
    flex-flow: row wrap;
    /* Une flex-direction y flex-wrap */
    width: auto;
    max-height: 1000px;
    border: 3px solid black;
    padding: 5px;
}

.caja {
    /*float: left;*/ /* Los floats necesitan de los clearfix, flex no */
    flex-grow: 1;
    /* Adapta el tamanio de las cajas contenidas (numeros>0) */
    /* Son mas responsive las cajas */
    flex-basis: calc((100% / 3) - 80px);
    /* les da un tamanio minimo a la caja */
    /* se puede indicar en el contenedor, o en cada caja */
    /* preferible antes que width */
    /* necesita del grow para que las cajas se adapten al responsive, se combinan */
    font-size: 20px;
    font-weight: bold;
    text-align: center;
    color: white;
    padding: 20px;
    margin: 10px;
    border: 4px solid #222;

    background-color: gray;
}

/* order permite dar un orden a las cajas dentro del contenedor */
/* order: -1; es para poner una caja primero, en el caso de que las otras no tengan order */
/* los num mas pequenios van primero */
.red {
    flex-grow: 2;
    /* Podemos usar flex-grow en cajas especificas */
    /* Mientras mayor sea el numero, mas espacio ocupa la caja */
    /* Mientras mayor sea el numero, mas prioridad le da */
    /* Siempre se tratara de distribuir el espacio entre todos */
    order: 4;
    background-color: var(--rojo); /* llamo a la variable */
    /* Se le puede llamar las veces que sea */
}

.green {
    order: 2;
    background-color: green;
}

.blue {
    flex-shrink: 0;
    /* hace lo contrario a grow, hace que la caja ocupe menos espacio */
    flex-grow: 0;
    /* las dos instrucciones, haran que la caja reduzca tamanio */
    background-color: blue;
}

.orange {
    /*width: 25%;*/
    /* Dando un width (sobretodo si se da a todas las cajas) ya no muy flexible */
    flex-basis: 100%; /* calc hace calculos */
    order: 3;
    background-color: orange;
}